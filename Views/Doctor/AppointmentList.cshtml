    @model IEnumerable<MediCare_MVC_Project.MediCare.Application.DTOs.AppointmentDTOs.GetAppointmentDTO>

@{
    ViewData["Title"] = "All Appointments";
    Layout = "~/Views/Shared/_DoctorLayout.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" integrity="sha512-..." crossorigin="anonymous" />

<style>
    .page-header h2 {
        font-weight: 600;
        font-size: 24px;
    }

    .card-container {
        background: #fff;
        padding: 25px;
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        overflow-x: scroll;
    }

    .table-custom {
        width: 100%;
        border-collapse: collapse;
        margin-top: 15px;
    }

        .table-custom th, .table-custom td {
            padding: 14px;
            text-align: left;
            border-bottom: 1px solid #dee2e6;
            font-size: 14px;
        }

        .table-custom th {
            background-color: #0d6efd;
            color: #fff;
            font-weight: 600;
        }

        .table-custom tbody tr:nth-child(even) {
            background-color: #f8f9fa;
        }

        .table-custom tbody tr:hover {
            background-color: #e2e6ea;
        }

    .btn-sm i {
        margin-right: 4px;
    }

    .badge {
        padding: 5px 10px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 500;
    }

    .badge-info {
        background-color: #0dcaf0;
        color: #000;
    }

    .toast {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1050;
    }

    /* Blur background when modal is opened */
    .blurred {
        filter: blur(5px);
        pointer-events: none;
    }

    /* Modal Styles */
    .modal-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        z-index: 1040;
    }

    .modal-content {
        display: flex;
        flex-direction: column;
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        width: 60%; /* Adjust the width as needed */
        max-width: 800px;
        margin: auto;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 1050; /* Ensure it's on top of the backdrop */
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center; /* Vertically center the content */
        padding-bottom: 10px;
        border-bottom: 1px solid #ddd;
    }

        .modal-header h5 {
            margin: 0;
            font-size: 20px;
            font-weight: 600;
        }

    #closeModal {
        font-size: 20px;
        padding: 0 10px;
        line-height: 1;
        background-color: dodgerblue;
        color: white;
        border-radius: 20px;
    }

        #closeModal:hover {
            background-color: white;
            color: blue;
        }

    .modal-body {
        padding: 20px;
    }

    /* Appointment Status Badges */
    .badge-status {
        padding: 5px 12px;
        border-radius: 20px;
        font-size: 13px;
        font-weight: 600;
        display: inline-block;
        min-width: 90px;
        text-align: center;
    }

    / /* Specific status styles */
    .badge-pending {
        background-color: #fff3cd; /* Soft warning */
        color: #664d03;
    }

    .badge-completed {
        background-color: #d1e7dd; /* Soft success */
        color: #0f5132;
    }

    .badge-scheduled {
        background-color: #cff4fc; /* Soft info */
        color: #055160;
    }

    .badge-inprogress {
        background-color: #cfe2ff; /* Soft primary */
        color: #084298;
    }

    .badge-rescheduled {
        background-color: #e2d9f3; /* Soft purple */
        color: #3c0d99;
    }

    .badge-no-show {
        background-color: #e2e3e5; /* Soft secondary */
        color: #41464b;
    }

    .badge-cancelled {
        background-color: #f8d7da; /* Soft danger */
        color: #842029;
    }

</style>

<div class="card-container">
    <div class="page-header d-flex justify-content-between align-items-center mb-3">
        <h2>My Appointments</h2>
    </div>

    <table class="table-custom">
        <thead>
            <tr>
                <th>#</th>
                <th>Patient</th>
                <th>Email</th>
                <th>Date</th> 
                <th>Time Slot</th>
                <th>Status</th>
                <th>Checkup</th>
                <th>Lab Test</th>
                <th>Bed</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="appointment-row" data-appointmentid="@item.AppointmentId"
                    data-patient="@item.FirstName @item.LastName"
                    data-doctor="@item.DoctorName"
                    data-description="@item.AppointmentDescription"
                    data-date="@item.AppointmentDate.ToString("dd MMM yyyy")"
                    data-timeslot="@DateTime.Today.Add(item.AppointmentStarts).ToString("hh:mm tt") - @DateTime.Today.Add(item.AppointmentEnds).ToString("hh:mm tt")">

                    <td>@item.AppointmentId</td>
                    <td>@item.FirstName @item.LastName</td>
                    <td>@item.Email</td>
                    <td>@item.AppointmentDate.ToString("dd MMM yyyy")</td>
                    <td>
                        @DateTime.Today.Add(item.AppointmentStarts).ToString("hh:mm tt")
                        - @DateTime.Today.Add(item.AppointmentEnds).ToString("hh:mm tt")
                    </td>
                    <td>
                        @{
                            var statusClass = item.Status.ToLower() switch
                            {
                                "pending" => "badge-pending",
                                "completed" => "badge-completed",
                                "cancelled" => "badge-cancelled",
                                "scheduled" => "badge-scheduled",
                                "in progress" => "badge-inprogress",
                                "rescheduled" => "badge-rescheduled",
                                "no show" => "badge-no-show",
                                _ => "badge-secondary"
                            };
                        }
                        <span class="badge-status @statusClass">@item.Status</span>
                    </td>
                    <td>
                        <a class="btn btn-sm btn-success" href="@Url.Action("Checkup", "Appointment", new { id = item.AppointmentId })" title="Checkup">
                            <i class="fas fa-notes-medical"></i>
                        </a>
                    </td>
                    <td>
                        <a class="btn btn-sm btn-info" href="@Url.Action("CreateLabTest", "LabTest", new { aadharNo = item.AadharNo })" title="Lab Test">
                            <i class="fas fa-vials"></i>
                        </a>
                    </td>
                    <td>
                        <a class="btn btn-sm btn-dark" href="@Url.Action("BedAllotmentForm", "Bed", new { aadharNo = item.AadharNo })" title="Bed Allotment">
                            <i class="fas fa-procedures"></i>
                        </a>
                    </td>
                    <td>
                        <a class="btn btn-sm btn-primary" href="@Url.Action("SendReminder", "Appointment", new { id = item.AppointmentId })" title="Send Reminder">
                            <i class="fas fa-envelope"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Modal -->
<div class="modal-backdrop" id="modalBackdrop" style="display:none;"></div>
<div class="modal-content" id="appointmentModal" style="display:none;">
    <div class="modal-header">
        <h5>Appointment Details</h5>
        <button type="button" id="closeModal" class="btn btn-sm btn-danger">&times;</button>
    </div>
    <div class="modal-body">
        <p><strong>Patient:</strong> <span id="modalPatient"></span></p>
        <p><strong>Doctor:</strong> <span id="modalDoctor"></span></p>
        <p><strong>Description:</strong> <span id="modalDescription"></span></p>
        <p><strong>Date:</strong> <span id="modalDate"></span></p>
        <p><strong>Time Slot:</strong> <span id="modalTimeSlot"></span></p>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const rows = document.querySelectorAll('.appointment-row');
            const modalBackdrop = document.getElementById('modalBackdrop');
            const appointmentModal = document.getElementById('appointmentModal');
            const closeModal = document.getElementById('closeModal');

            rows.forEach(row => {
                row.addEventListener('click', function (event) {
                    if (event.target.closest('a')) return;

                    document.getElementById('modalPatient').textContent = row.getAttribute('data-patient');
                    document.getElementById('modalDoctor').textContent = row.getAttribute('data-doctor');
                    document.getElementById('modalDescription').textContent = row.getAttribute('data-description');
                    document.getElementById('modalDate').textContent = row.getAttribute('data-date');
                    document.getElementById('modalTimeSlot').textContent = row.getAttribute('data-timeslot');

                    modalBackdrop.style.display = 'block';
                    appointmentModal.style.display = 'block';
                });
            });

            closeModal.addEventListener('click', function () {
                modalBackdrop.style.display = 'none';
                appointmentModal.style.display = 'none';
            });
        });
    </script>
}