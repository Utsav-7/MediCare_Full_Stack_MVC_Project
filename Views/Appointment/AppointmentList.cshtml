@model IEnumerable<MediCare_MVC_Project.Models.AppointmentViewModel>

@{
    ViewData["Title"] = "All Appointments";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" integrity="sha512-..." crossorigin="anonymous" />

<style>
    .page-header h2 {
        font-weight: 600;
        font-size: 24px;
    }

    .card-container {
        background: #fff;
        padding: 25px;
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .table-custom {
        width: 100%;
        border-collapse: collapse;
        margin-top: 15px;
    }

        .table-custom th,
        .table-custom td {
            padding: 14px;
            text-align: left;
            border-bottom: 1px solid #dee2e6;
            font-size: 14px;
        }

        .table-custom th {
            background-color: #0d6efd;
            color: #fff;
            font-weight: 600;
        }

        .table-custom tbody tr:nth-child(even) {
            background-color: #f8f9fa;
        }

        .table-custom tbody tr:hover {
            background-color: #e2e6ea;
        }

    .btn-sm i {
        margin-right: 4px;
    }

    .badge {
        padding: 5px 10px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 500;
    }

    .badge-info {
        background-color: #0dcaf0;
        color: #000;
    }

    .toast {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1050;
    }
</style>


@if (TempData["Success"] != null)
{
    <div class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true" id="successToast">
        <div class="d-flex">
            <div class="toast-body">
                @TempData["Success"]
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="toast align-items-center text-bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true" id="errorToast">
        <div class="d-flex">
            <div class="toast-body">
                @TempData["Error"]
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
}

<div class="card-container">
    <div class="page-header d-flex justify-content-between align-items-center mb-3">
    <h2>All Appointments</h2>
</div>
    <table class="table-custom">
        <thead>
            <tr>
                <th>#</th>
                <th>Patient</th>
                <th>Email</th>
                <th>Aadhar</th>
                <th>Doctor</th>
                <th>Date</th>
                <th>Time Slot</th>
                <th>Description</th>
                <th>Status</th>
                <th>Checkup</th>
                <th>Lab Test</th>
                <th>Bed</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.AppointmentId</td>
                    <td>@item.FirstName @item.LastName</td>
                    <td>@item.Email</td>
                    <td>@item.AadharNo</td>
                    <td>@item.DoctorName</td>
                    <td>@item.AppointmentDate.ToString("dd MMM yyyy")</td>
                    <td>
                        @DateTime.Today.Add(TimeSpan.Parse(item.AppointmentStarts)).ToString("hh:mm tt")
                        -
                        @DateTime.Today.Add(TimeSpan.Parse(item.AppointmentEnds)).ToString("hh:mm tt")
                    </td>
                    <td>@item.AppointmentDescription</td>
                    <td><span class="badge badge-info">@item.Status</span></td>
                    <td>
                        <a class="btn btn-sm btn-success" href="@Url.Action("Checkup", "Appointment", new { id = item.AppointmentId })" title="Checkup">
                            <i class="fas fa-notes-medical"></i>
                        </a>
                    </td>
                    <td>
                        <a class="btn btn-sm btn-info" href="@Url.Action("CreateLabTest", "LabTest", new { aadharNo = item.AadharNo })" title="Lab Test">
                            <i class="fas fa-vials"></i>
                        </a>
                    </td>
                    <td>
                        <a class="btn btn-sm btn-dark" href="@Url.Action("BedAllotmentForm", "Bed", new { aadharNo = item.AadharNo })" title="Bed Allotment">
                            <i class="fas fa-procedures"></i>
                        </a>
                    </td>
                    <td>
                        <a class="btn btn-sm btn-warning" href="@Url.Action("Edit", "Appointment", new { id = item.AppointmentId })" title="Edit">
                            <i class="fas fa-edit"></i>
                        </a>

                        <a class="btn btn-sm btn-primary" href="@Url.Action("SendReminder", "Appointment", new { id = item.AppointmentId })" title="Send Reminder">
                            <i class="fas fa-envelope"></i>
                        </a>

                        <form asp-action="Delete" asp-controller="Admin" method="post" style="display:inline;">
                            <input type="hidden" name="id" value="@item.AppointmentId" />
                            <button type="submit" class="btn btn-sm btn-danger" title="Delete" onclick="return confirm('Are you sure you want to delete this appointment?');">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const toastElements = document.querySelectorAll('.toast');
            toastElements.forEach(toastEl => {
                new bootstrap.Toast(toastEl, { delay: 3000, autohide: true }).show();
            });
        });
    </script>
}