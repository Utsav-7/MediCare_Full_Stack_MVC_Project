@model IEnumerable<MediCare_MVC_Project.Models.CheckUpViewModel>

@{
    ViewData["Title"] = "All CheckUps";
    var isAdmin = User.IsInRole("Administrator");
    var isReceptionist = User.IsInRole("Receptionist");
    var isDoctor = User.IsInRole("Doctor");
    var showActions = isAdmin || isReceptionist;

    // Set layout conditionally
    if (isReceptionist)
    {
        Layout = "~/Views/Shared/_ReceptionistLayout.cshtml";
    }
    else if (isDoctor)
    {
        Layout = "~/Views/Shared/_DoctorLayout.cshtml"; // Or null if you want to remove layout
    }
    else if (isAdmin)
    {
        Layout = "~/Views/Shared/_AdminLayout.cshtml"; // Or null if you want to remove layout
    }
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" crossorigin="anonymous" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<style>
    .page-header h2 {
        font-weight: 600;
        font-size: 24px;
    }

    .page-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .card-container {
        background: #fff;
        padding: 25px;
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .table-custom {
        width: 100%;
        border-collapse: collapse;
        margin-top: 15px;
    }

        .table-custom th,
        .table-custom td {
            padding: 14px;
            text-align: left;
            border-bottom: 1px solid #dee2e6;
            font-size: 14px;
        }

        .table-custom th {
            background-color: #0d6efd;
            color: #fff;
            font-weight: 600;
        }

        .table-custom tbody tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        .table-custom tbody tr:hover {
            background-color: #eef1f5;
        }

    .action-btns {
        text-align: center;
        display: flex;
    }

        .action-btns .btn {
            padding: 0;
            font-size: 15px;
            border: none;
            background: transparent;
            margin-right: 10px;
            color: #0d6efd;
        }

        .action-btns .btn-danger {
            color: black;
        }

        .action-btns .btn-warning {
            color: black;
        }

        .action-btns .btn-success {
            color: #198754;
        }

        .action-btns .btn-mail {
            color: #0d6efd;
        }

    .modal-content {
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
        border: none;
    }

    .modal-header {
        background-color: #0d6efd;
        color: white;
        border-bottom: none;
        border-radius: 12px 12px 0 0;
    }

    .modal-title {
        font-weight: 600;
    }

    .modal-footer {
        border-top: none;
    }

    .modal-body textarea {
        resize: none;
        font-size: 14px;
    }
</style>

<div class="card-container">
    <div class="page-header mb-3">
        <h2>All Check Ups</h2>
    </div>

    <table class="table-custom">
        <thead>
            <tr>
                <th>#</th>
                <th>Patient Name</th>
                @if(isAdmin || isReceptionist)
                {
                   <th>Doctor Name</th>
                }
                <th>Email</th>
                <th>Mobile No</th>
                <th>Appointment Date</th>
                <th>Time</th>
                <th>Description</th>
                <th>Note</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @{
                int index = 1;
            }
            @if (Model != null && Model.Any())
            {
                foreach (var item in Model)
                {
                    <tr data-note-id="@item.PatientNoteId">
                        <td>@index</td>
                        <td>@item.PatientName</td>
                        @if(isAdmin || isReceptionist)
                        {
                            <td>@item.DoctorName</td>
                        }
                        <td>@item.Email</td>
                        <td>@item.MobileNo</td>
                        <td>@item.AppointmentDate.ToString("dd-MM-yyyy")</td>
                        <td>
                            @DateTime.Today.Add(item.StartTime).ToString("hh:mm tt") -
                            @DateTime.Today.Add(item.EndTime).ToString("hh:mm tt")
                        </td>
                        <td>@item.AppointmentDescription</td>
                        <td class="note-cell">@item.NoteText</td>
                        <td class="action-btns">
                            @if (isAdmin || isDoctor)
                            {
                                <button type="button"
                                        class="btn btn-warning edit-note-btn"
                                        data-id="@item.PatientNoteId"
                                        data-note="@item.NoteText"
                                        title="Edit">
                                    <i class="fas fa-edit"></i>
                                </button>
                            }


                            @if(isAdmin)
                            {
                                <a asp-action="DeleteCheckUp" asp-controller="Appointment" asp-route-id="@item.PatientNoteId" title="Delete" class="btn btn-danger" onclick="return confirm('Are you sure to delete this checkup note?');">
                                    <i class="fas fa-trash-alt"></i>
                                </a>
                            }
                            <a asp-action="DownloadNotes" asp-controller="Appointment" asp-route-id="@item.PatientNoteId" title="Download Notes" class="btn btn-success">
                                <i class="fas fa-download"></i>
                            </a>
                            <a asp-action="SendEmailWithNotes" asp-controller="Appointment" asp-route-id="@item.PatientNoteId" title="Send Email" class="btn btn-mail">
                                <i class="fas fa-envelope"></i>
                            </a>
                        </td>
                    </tr>
                    index++;
                }
            }
            else
            {
                <tr><td colspan="10" class="text-center">No checkups found.</td></tr>
            }
        </tbody>
    </table>
</div>

<!-- Modal (initially hidden) -->
<div class="modal fade" id="editNoteModal" tabindex="-1" aria-labelledby="editNoteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form id="editNoteForm" method="post" action="/Appointment/UpdateNote" asp-asp-controller="Appointment">
                <input type="hidden" name="PatientNoteId" id="editNoteId" />
                <div class="modal-header">
                    <h5 class="modal-title" id="editNoteModalLabel">Edit Note</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <textarea name="NoteText" id="editNoteText" class="form-control" rows="5"></textarea>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        // Edit button click handler
        $(document).on('click', '.edit-note-btn', function () {
            var noteId = $(this).data('id');
            var noteText = $(this).data('note');

            $('#editNoteId').val(noteId);
            $('#editNoteText').val(noteText);

            // Initialize and show modal (centered)
            var editNoteModal = new bootstrap.Modal(document.getElementById('editNoteModal'), {
                backdrop: 'static',
                keyboard: false
            });
            editNoteModal.show();
        });

        // Form submission handler
        $('#editNoteForm').submit(function (e) {
            e.preventDefault();

            $.ajax({
                url: $(this).attr('action'),
                type: 'POST',
                data: $(this).serialize(),
                success: function (response) {
                    if (response.success) {
                        // Update the note in the table
                        var noteId = $('#editNoteId').val();
                        var updatedNote = $('#editNoteText').val();
                        $('tr[data-note-id="' + noteId + '"] .note-cell').text(updatedNote);

                        // Hide the modal
                        var editNoteModal = bootstrap.Modal.getInstance(document.getElementById('editNoteModal'));
                        editNoteModal.hide();

                        // Optional: Show success message
                        alert('Note updated successfully');
                    } else {
                        alert('Error: ' + response.message);
                    }
                },
                error: function () {
                    alert('An error occurred while updating the note');
                }
            });
        });
    });
</script>